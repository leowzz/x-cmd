
# From module args
# seq 3 | x arg1 echo '$1'
# Efficiency problem: It is using eval to run the command.

___x_cmd_line_arg1(){
    case "$1" in
        -h|--help)      ___x_cmd help -m line   arg1 "$@"; return ;;
        --)             shift ;;
    esac

    local i
    local code_func='___x_cmd_args___run_inner(){ eval '
    # for ((i=1; i<=$#; ++i)); do
    i=1
    while [ $i -le $# ];do
        eval "local _$i; _$i=\"\$$i\""
        # code_func="$code_func \"\$_$i\" \\\"\\\$@\\\" "
        code_func="$code_func \"\$_$i\" "
        i=$((i+1))
    done
    code_func="$code_func ; }"
    eval "$code_func"

    while read -r _a1; do
        ___x_cmd_args___run_inner "$_a1"
    done
}
