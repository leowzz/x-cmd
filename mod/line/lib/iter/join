
___x_cmd_line_join(){
    case "$1" in
        -h|--help)      ___x_cmd help -m line   join "$@"; return ;;
        --)             shift ;;
    esac

    local noblank=
    [ "$1" != "--noblank" ] || {
        noblank=1
        shift
    }

    local ___X_CMD_LINE_INNER_SEP="${1:-"$___X_CMD_UNSEENCHAR_NEWLINE"}"
    local ___X_CMD_LINE_INNER_BEGIN="$2"
    local ___X_CMD_LINE_INNER_END="$3"
    local IFS="
"

    local ___X_CMD_LINE_INNER_LINE
    local first=
    while read -r ___X_CMD_LINE_INNER_LINE; do
        [ -z "$noblank" ] || [ -n "$___X_CMD_LINE_INNER_LINE" ] || continue

        if [ -n "$first" ]; then
            printf "%s%s%s%s" \
                "$___X_CMD_LINE_INNER_SEP"      \
                "$___X_CMD_LINE_INNER_BEGIN"    \
                "$___X_CMD_LINE_INNER_LINE"     \
                "$___X_CMD_LINE_INNER_END"
        else
            first=1
            printf "%s%s%s" \
                "$___X_CMD_LINE_INNER_BEGIN"    \
                "$___X_CMD_LINE_INNER_LINE"     \
                "$___X_CMD_LINE_INNER_END"
        fi
    done
}

___x_cmd_line_join_(){
    case "$1" in
        -h|--help)      ___x_cmd help -m line   join_ "$@"; return ;;
        --)             shift ;;
    esac

    local noblank=
    [ "$1" != "--noblank" ] || {
        noblank=1
        shift
    }

    local ___X_CMD_LINE_INNER_SEP="${1:-
}"
    local ___X_CMD_LINE_INNER_BEGIN="$2"
    local ___X_CMD_LINE_INNER_END="$3"
    local IFS="
"

    local ___X_CMD_LINE_INNER_LINE
    x_=
    local first=
    while read -r ___X_CMD_LINE_INNER_LINE; do
        [ -z "$noblank" ] || [ -n "$___X_CMD_LINE_INNER_LINE" ] || continue

        if [ -n "$first" ]; then
            x_="${x_}""$___X_CMD_LINE_INNER_SEP""$___X_CMD_LINE_INNER_BEGIN""$___X_CMD_LINE_INNER_LINE""$___X_CMD_LINE_INNER_END"
        else
            x_="$___X_CMD_LINE_INNER_BEGIN""$___X_CMD_LINE_INNER_LINE""$___X_CMD_LINE_INNER_END"
            first=1
        fi
    done
}