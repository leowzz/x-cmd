# shellcheck shell=dash

___x_cmd_alpine_image_prepare(){
    local x_
    ___x_cmd_alpine_image_prepare_ "$@" || return $?
    printf "%s\n" "$x_"
}

___x_cmd_alpine_image_prepare_(){
    if [ $# -eq 0 ]; then
        ___x_cmd_alpine_image_prepare_base_
    else
        ___x_cmd_alpine_image_prepare_auto_ "$@"
    fi
}

___x_cmd_alpine_image_prepare_base_(){
    local newimage="${___X_CMD_ALPINE_PREFIX}-base"

    x_="$newimage"

    if [ -z "$___X_CMD_ALPINE_IMAGE_REBUILD" ]; then
        ! ___x_cmd docker image exist "$newimage" || {
            alpine:debug "Image already created -> $newimage"
            return 0
        }
    fi

    # consdier using image cmdinfo to replace it ...
    # we will check the cmdinfo data in the xal ps ... or xal container check ...
    if ! ___x_cmd docker image exist alpine; then
        ___x_cmd_alpine_image_download  || return $?
    fi

    ___x_cmd docker refit               \
        --from alpine --to "$newimage"  \
        --userabc                       \
        --apk 'curl fzf jq sqlite bash' || return $?

    x_="$newimage"
}

# prepare image for xal-go, xal-java, xal-py, xal-openjdk, xal-bun, xal-node, xal-deno

___x_cmd_alpine_image_prepare_pkgsys(){
    :
}

___x_cmd_alpine_image_prepare_auto_(){
    local pkgsys="$1"
    local pkgname="$2"
    local newimage="$3"

    [ -n "$newimage" ] || {
        local tmp="${pkgname%@*}"
        tmp="${tmp%\.git}"
        tmp="${tmp##*/}"
        # local ___X_CMD_STR___DASH2UNDERLINE=; ___x_cmd_str___dash2underline "$tmp"

        newimage="${pkgsys#--}_$(___x_cmd_cmds awk -v n="$tmp" 'BEGIN{ gsub("[^_0-9A-Za-z]", "_", n); print n; }')"
    }

    ___x_cmd_alpine_image_prepare_base_ || return $?

    newimage="${___X_CMD_ALPINE_PREFIX}-base-${newimage}"
    x_="$newimage"

    if [ -z "$___X_CMD_ALPINE_IMAGE_REBUILD" ]; then
        ! ___x_cmd docker image exist "$newimage" || return 0
    fi

    ___x_cmd docker refit \
        --from "${___X_CMD_ALPINE_PREFIX}-base" --to "$newimage"  \
        --userabc                       \
        "$pkgsys" "$pkgname" || return $?
}
