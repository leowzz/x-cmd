{
"#name"
:
{
"line"
:
"functions for line-oriented situation"
}
,
"#synopsis"
:
[
{
"x line [<subcommand>...]"
:
null
}
]
,
"uni"
:
{
"#desc"
:
{
"en"
:
"Duplicate lines from stdin, output only the first occurrence of each.  Using a set for O(1) lookup, faster than `sort | uniq`."
,
"cn"
:
"流式去重：从标准输入读取数据，保留首次出现的行并输出，使用集合实现 O(1) 去重，无需排序，比 `sort | uniq` 更高效。"
}
,
"#tldr"
:
[
{
"en"
:
"Two number lists, 1, 2, 3, and 3, 2, 1, were deduplicated, resulting in the unique sequence 1, 2, 3.  (Note: the original lists were generated using the `seq` command, meaning each number was on a new line.)"
,
"cn"
:
"对两个数字列表 1 2 3 和 3 2 1 进行去重, 输出为 1 2 3 ( 注意, 数字列表由 seq 命令生成, 分隔为换行符 )"
,
"cmd"
:
"{ seq 1 3; seq 3 1 } | x line uni"
}
,
{
"en"
:
"Show all commands found in both /bin and /usr/bin, listing each command only once. This method is more efficient than `ls /bin /usr/bin | sort | uniq` because it avoids sorting, allowing output to be displayed as input is read."
,
"cn"
:
"显示在 /bin 和 /usr/bin 中的所有命令, 同名命令只显示一次; 比 `ls /bin /usr/bin | sort | uniq` 更为高效(无需排序), 允许边读取边输出"
,
"cmd"
:
"{ ls /bin /usr/bin  } | x line uni"
}
]
}
,
"duo"
:
{
"#desc"
:
{
"en"
:
"Find and print duplicate lines from stdin, preserving the order of their second appearance using a lookup table -- to avoid sorting."
,
"cn"
:
"从标准输入中查找并打印重复的行，使用查找表保留它们第二次出现的顺序——以避免排序。"
}
,
"#tldr"
:
[
{
"en"
:
"Two number lists, 1, 2, 3, 3 and 3, 2, 1, 1 were processed, resulting in the sequence 1, 3."
,
"cn"
:
"对两个数字列表 1 2 3 和 5 4 3 2 1 1 进行处理，输出为 5 4 3"
,
"cmd"
:
"{ seq 1 3; seq 5 1; } | x line duo"
}
,
{
"en"
:
"Show all commands found in both /bin and /usr/bin more than once, listing each command only once in the output."
,
"cn"
:
"显示在 /bin 和 /usr/bin 中出现两次及以上的命令，输出的命令不重复。"
,
"cmd"
:
"{ ls /bin /usr/bin  } | x line duo"
}
]
}
,
"uno"
:
{
"#desc"
:
{
"en"
:
"Find and print unique lines from stdin, preserving the order of their first appearance."
,
"cn"
:
"从标准输入中查找并打印只出现一次的行，保留它们第一次出现的顺序。"
}
,
"#tldr"
:
[
{
"en"
:
"Two number lists, 1, 2, 3, 3 and 3, 2, 1, 1 were processed, resulting in the sequence 2."
,
"cn"
:
"对两个数字列表 1 2 3 3 和 3 2 1 1 进行处理，输出为 2。"
,
"cmd"
:
"{ seq 1 3; seq 1 3; echo 2; } | x line uno"
}
,
{
"en"
:
"Show all commands found only once in either /bin or /usr/bin."
,
"cn"
:
"显示在 /bin 或 /usr/bin 中只出现一次的命令。"
,
"cmd"
:
"{ ls /bin /usr/bin  } | x line uno"
}
]
}
,
"join"
:
{
"#desc"
:
{
"en"
:
"Join all lines from stdin with a specified separator."
,
"cn"
:
"使用指定的分隔符连接标准输入中的所有行。"
}
,
"#tldr"
:
[
{
"en"
:
"Join lines with a comma."
,
"cn"
:
"使用逗号连接行。"
,
"cmd"
:
"echo -e \"a\\nb\\nc\" | x line join \",\""
}
,
{
"en"
:
"Join lines with a space."
,
"cn"
:
"使用空格连接行。"
,
"cmd"
:
"echo -e \"1\\n2\\n3\" | x line join \" \""
}
]
}
,
"wrap"
:
{
"#desc"
:
{
"en"
:
"Wrap each line from stdin with a prefix and suffix."
,
"cn"
:
"用前缀和后缀包裹标准输入中的每一行。"
}
,
"#tldr"
:
[
{
"en"
:
"Wrap lines with parentheses."
,
"cn"
:
"用括号包裹行。"
,
"cmd"
:
"seq 3 | x line wrap \"(\" \")\""
}
,
{
"en"
:
"Wrap lines with quotes."
,
"cn"
:
"用引号包裹行。"
,
"cmd"
:
"seq 3 | x line wrap \"\\\"\" \"\\\"\""
}
]
}
,
"minus"
:
{
"#desc"
:
{
"en"
:
"Filters lines from standard input, removing lines that match any of the specified patterns.  Patterns can be strings or regular expressions."
,
"cn"
:
"从标准输入过滤行，移除与指定模式匹配的行。模式可以是字符串或正则表达式。"
}
,
"#tldr"
:
[
{
"en"
:
"The sequence 1 through 5 was processed, removing the line containing '2', resulting in the sequence 1, 3, 4, 5."
,
"cn"
:
"对数字序列 1 到 5 进行处理，移除值为 '2' 的行，输出为 1 3 4 5."
,
"cmd"
:
"seq 5 | x minus 2"
}
]
}
,
"args"
:
{
"#desc"
:
{
"en"
:
"Read data from stdin line by line, gathering it into batches of 'n' lines.  Each batch is processed by a function constructed from arguments.  Unlike the traditional 'xargs' command, which uses an external command for each batch, this approach handles batches internally."
,
"cn"
:
"从标准输入逐行读取数据, 以 n 行为一组, 对每组数据执行参数所构成的 shell 指令所构成的函数进行处理; 传统 xargs 命令则是对每批数据都是采用外部命令处理."
}
,
"#tldr"
:
[
{
"cmd"
:
"seq 10 | x line args -n 3 'echo $1 $2 $3'"
,
"en"
:
"Read stdin, group every 3 lines, output each group on a single line."
,
"cn"
:
"读取标准输入，每三行分为一组，并将每组内容输出到一行。"
}
,
{
"cmd"
:
"seq 10 | x line args -n 2 'local a=$1; local b=2; printf \"%d\\n\" \"$((a+b))\" '"
,
"en"
:
"Read lines from stdin in pairs, and each pair of numbers is added together. This demo demostrates the execution is run inside a fucntion scope."
,
"cn"
:
"程序从标准输入中每次读取两行数字，并将每一对数字相加。这个演示展示了程序的执行是在一个函数作用域内进行的。"
}
]
,
"#other"
:
{
"en"
:
{
"Please visit our homepage for more information:"
:
"https://x-cmd.com"
}
,
"cn"
:
{
"请访问我们的主页以获取更多信息："
:
"https://x-cmd.com"
}
}
}
}

